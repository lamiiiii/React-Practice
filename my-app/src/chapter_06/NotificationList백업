; import React from "react";
; import Notification from "./Notification";

; const reservedNotifications = [  // 데이터가 여러개라면 구분할 수 있게 해라
;     {
;         id:1, // id값을 써도 속성값은 key값으로 불러와야 함
;         message:"안녕하세요, 오늘 일정을 알려드립니다.",
;     },
;     {
;         id:2,
;         message:"점심식사 시간입니다.",
;     },
;     {
;         id:3,
;         message:"이제 곧 미팅이 시작됩니다.",
;     },
; ];

; var timer;

; class NotificationList extends React.Component{
;     constructor(props){
;         super(props);
        
;         this.state={
;             notifications:[],   // state에 넣어서 초기화
;         };
;     }

;     componentDidMount(){
;         const {notifications}=this.state;
;         timer = setInterval(()=>{
;             if (notifications.length < reservedNotifications.length){
;                 const index = notifications.length;
;                 notifications.push(reservedNotifications[index]); // push함수는 stack이용 (나중에 들어가는 것이 제일 위에)
;                 this.setState({
;                     notifications: notifications,
;                 });
;             } else{
;                 this.setState({ //값을 직접적으로 바꿀 수 없고 setState 함수를 통해 변경 가능
;                     notifications: [], // Notifications 비우기
;                 });
;                 clearInterval(timer);
;             }
;         }, 1000);
;     }
;     render(){
;         return(
;             <div>
;                 {this.state.notifications.map((notification)=>{
;                     return
;                         <Notification 
;                             key={notification.id} // rendering할 때는 꼭 key값으로 데려와야 함
;                             id={notification.id}
;                             message={notification.message}/>;
;                 })}
;             </div>
;         );
;     }
; }
; export default NotificationList;